//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using Dos.ORM;

namespace NtAbcExam.Domain.Models
{
    /// <summary>
    /// 实体类exam_test。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Table("exam_test")]
    [Serializable]
    public partial class exam_test : Entity
    {
        #region Model
        private int _Id;
        private int _TestId;
        private int _SubjectId;
        private decimal _TotalPer;
        private int _SingleCount;
        private decimal _SinglePer;
        private int _MultiCount;
        private decimal _MultiPer;
        private int _JudgeCount;
        private decimal _JudgePer;
        private int _TestTime;
        private DateTime _StartTime;
        private DateTime _EndTime;
        private DateTime _SetTIme;
        private int? _SetUserId;
        private int? _PassUserId;
        private DateTime? _PassTime;
        private int _DeptId;

        /// <summary>
        /// 
        /// </summary>
        [Field("Id")]
        public int Id
        {
            get { return _Id; }
            set
            {
                this.OnPropertyValueChange("Id");
                this._Id = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("TestId")]
        public int TestId
        {
            get { return _TestId; }
            set
            {
                this.OnPropertyValueChange("TestId");
                this._TestId = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("SubjectId")]
        public int SubjectId
        {
            get { return _SubjectId; }
            set
            {
                this.OnPropertyValueChange("SubjectId");
                this._SubjectId = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("TotalPer")]
        public decimal TotalPer
        {
            get { return _TotalPer; }
            set
            {
                this.OnPropertyValueChange("TotalPer");
                this._TotalPer = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("SingleCount")]
        public int SingleCount
        {
            get { return _SingleCount; }
            set
            {
                this.OnPropertyValueChange("SingleCount");
                this._SingleCount = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("SinglePer")]
        public decimal SinglePer
        {
            get { return _SinglePer; }
            set
            {
                this.OnPropertyValueChange("SinglePer");
                this._SinglePer = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("MultiCount")]
        public int MultiCount
        {
            get { return _MultiCount; }
            set
            {
                this.OnPropertyValueChange("MultiCount");
                this._MultiCount = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("MultiPer")]
        public decimal MultiPer
        {
            get { return _MultiPer; }
            set
            {
                this.OnPropertyValueChange("MultiPer");
                this._MultiPer = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("JudgeCount")]
        public int JudgeCount
        {
            get { return _JudgeCount; }
            set
            {
                this.OnPropertyValueChange("JudgeCount");
                this._JudgeCount = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("JudgePer")]
        public decimal JudgePer
        {
            get { return _JudgePer; }
            set
            {
                this.OnPropertyValueChange("JudgePer");
                this._JudgePer = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("TestTime")]
        public int TestTime
        {
            get { return _TestTime; }
            set
            {
                this.OnPropertyValueChange("TestTime");
                this._TestTime = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("StartTime")]
        public DateTime StartTime
        {
            get { return _StartTime; }
            set
            {
                this.OnPropertyValueChange("StartTime");
                this._StartTime = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("EndTime")]
        public DateTime EndTime
        {
            get { return _EndTime; }
            set
            {
                this.OnPropertyValueChange("EndTime");
                this._EndTime = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("SetTIme")]
        public DateTime SetTIme
        {
            get { return _SetTIme; }
            set
            {
                this.OnPropertyValueChange("SetTIme");
                this._SetTIme = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("SetUserId")]
        public int? SetUserId
        {
            get { return _SetUserId; }
            set
            {
                this.OnPropertyValueChange("SetUserId");
                this._SetUserId = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("PassUserId")]
        public int? PassUserId
        {
            get { return _PassUserId; }
            set
            {
                this.OnPropertyValueChange("PassUserId");
                this._PassUserId = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("PassTime")]
        public DateTime? PassTime
        {
            get { return _PassTime; }
            set
            {
                this.OnPropertyValueChange("PassTime");
                this._PassTime = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        [Field("DeptId")]
        public int DeptId
        {
            get { return _DeptId; }
            set
            {
                this.OnPropertyValueChange("DeptId");
                this._DeptId = value;
            }
        }
        #endregion

        #region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
                _.Id,
            };
        }
        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        public override Field GetIdentityField()
        {
            return _.Id;
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
                _.Id,
                _.TestId,
                _.SubjectId,
                _.TotalPer,
                _.SingleCount,
                _.SinglePer,
                _.MultiCount,
                _.MultiPer,
                _.JudgeCount,
                _.JudgePer,
                _.TestTime,
                _.StartTime,
                _.EndTime,
                _.SetTIme,
                _.SetUserId,
                _.PassUserId,
                _.PassTime,
                _.DeptId,
            };
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
                this._Id,
                this._TestId,
                this._SubjectId,
                this._TotalPer,
                this._SingleCount,
                this._SinglePer,
                this._MultiCount,
                this._MultiPer,
                this._JudgeCount,
                this._JudgePer,
                this._TestTime,
                this._StartTime,
                this._EndTime,
                this._SetTIme,
                this._SetUserId,
                this._PassUserId,
                this._PassTime,
                this._DeptId,
            };
        }
        /// <summary>
        /// 是否是v1.10.5.6及以上版本实体。
        /// </summary>
        /// <returns></returns>
        public override bool V1_10_5_6_Plus()
        {
            return true;
        }
        #endregion

        #region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// * 
            /// </summary>
            public readonly static Field All = new Field("*", "exam_test");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Id = new Field("Id", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field TestId = new Field("TestId", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field SubjectId = new Field("SubjectId", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field TotalPer = new Field("TotalPer", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field SingleCount = new Field("SingleCount", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field SinglePer = new Field("SinglePer", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field MultiCount = new Field("MultiCount", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field MultiPer = new Field("MultiPer", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field JudgeCount = new Field("JudgeCount", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field JudgePer = new Field("JudgePer", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field TestTime = new Field("TestTime", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field StartTime = new Field("StartTime", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field EndTime = new Field("EndTime", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field SetTIme = new Field("SetTIme", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field SetUserId = new Field("SetUserId", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field PassUserId = new Field("PassUserId", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field PassTime = new Field("PassTime", "exam_test", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field DeptId = new Field("DeptId", "exam_test", "");
        }
        #endregion
    }
}

